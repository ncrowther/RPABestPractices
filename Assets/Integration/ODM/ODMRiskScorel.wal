
	\gd6î=IÄlã<>¥'1defVar --name loanAmount_in --type Numeric --value 10000000 --parameter
defVar --name ODM_Body --type String
defVar --name ODM_response --type String
defVar --name value_out --type String --output
defVar --name extractionSuccess --type Boolean
defVar --name extractedTable --type DataTable
defVar --name tableRows --type Numeric
defVar --name tableColumns --type Numeric
defVar --name rowsQuantity --type Numeric
defVar --name columnsQuantity --type Numeric
defVar --name columnIndex --type Numeric
defVar --name cellContent --type String
setVar --name "${ODM_Body}" --value "{\r\n  \"LoanAmount\": ${loanAmount_in},\r\n  \"AgreementDate\": \"na\"\r\n}" --comment "Build the ODM Request Body"
logMessage --message "### Calling ODM with : ${ODM_Body}" --type "Info"
httpRequest --verb "Post" --url "http://localhost:9090/DecisionService/rest/v1/LiborClassification_RuleApp/1.0/LiborClassification/1.1?format=JSON" --formatter "Json" --source ${ODM_Body} ODM_response=value
//httpRequest --verb "Post" --url "http://localhost:9090/DecisionService/rest/v1/FollowupSalesLead_RuleApp/1.0/FollowupSalesLead/1.0?format=JSON" --formatter "Json" --source ${ODM_Body} --cookiecontainer  ODM_response=value

logMessage --message "Response = ${ODM_response}" --type "Info"

jsonToTable --json "${ODM_response}" --jsonPath "$" tableColumns=columns tableRows=rows extractionSuccess=success extractedTable=value
logMessage --message "Success: ${extractionSuccess}\r\nRows: ${tableRows}\r\nColumns: ${tableColumns}\r\nTable: ${extractedTable}" --type "Info"

filterTable --where "RiskScore > 1" --dataTable ${extractedTable} columnsQuantity=columns rowsQuantity=rows extractedTable=value
logMessage --message "Table with filtered data: ${extractedTable}\r\nRows Quantity: ${rowsQuantity}\r\nColumns Quantity: ${columnsQuantity}" --type "Info"

findColumnByName --dataTable ${extractedTable} --name RiskScore columnIndex=value
logMessage --message "Column position found: ${columnIndex}" --type "Info"

getTableCell --dataTable ${extractedTable} --column 2 --row 1 cellContent=value
logMessage --message "Cell Content: ${cellContent}" --type "Info""	|Èﬁﬁ[„F°,¸A∑ªé*	20.10.0.0